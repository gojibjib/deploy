version: "3"
services:
  jibjib-data:
    image: obitech/jibjib-data:1.0.0
    container_name: jibjib-data
    volumes:
        - "./data/db:/data/db"
    # ports:
    #     - "27017:27017"
    env_file: ./db.env
    entrypoint: /initdb/docker-entrypoint.sh
    command: mongod --config /etc/mongo/mongod.conf --auth 
    restart: always

  jibjib-api:
    image: "obitech/jibjib-api:1.0.0"
    container_name: "jibjib-api"
    environment:
      - JIBJIB_DB_URL=${READ_USER}:${READ_PW}@jibjib-data/birds
      - JIBJIB_MODEL_URL=http://jibjib-query:8081
    ports:
      - "8080:8080"
    depends_on: 
      - jibjib-data
    restart: always

  tf-serving:
    image: obitech/tensorflow-serving:devel-cpu
    container_name: tf-serving
    # ports:
    #   - 9000:9000
    volumes:
      - "./data/query/model:/serve"
    command: tensorflow_model_server --port=9000 --model_name=jibjib_model --model_base_path=/serve/jibjib_model
    restart: always

  jibjib-query:
    image: obitech/jibjib-query:1.0.0
    container_name: jibjib-query
    # ports:
    #   - "8081:8081"
    environment:
      - SERVING_URL=tf-serving
      - SERVING_PORT=9000
    volumes:
      - "./data/query/pickle:/app/input/pickle"
    depends_on:
      - tf-serving
    restart: always

  # node-exporter:
  #   image: prom/node-exporter:v0.16.0
  #   container_name: node-exporter
  #   # ports:
  #   #   - "9100:9100"
  #   volumes:
  #     - "/proc:/host/proc:ro"
  #     - "/sys:/host/sys:ro"
  #     - "/:/rootfs:ro"
  #   command: ["--path.procfs", "/host/proc", "--path.sysfs", "/host/sys", "--collector.filesystem.ignored-mount-points", "\"^/(sys|proc|dev|host|etc)($$|/)\""]
  #   restart: always
  
  # cadvisor:
  #   image: google/cadvisor:latest
  #   container_name: cadvisor
  #   # ports:
  #   #   - "3500:8080"
  #   volumes:
  #     - "/:/rootfs:ro"
  #     - "/var/run:/var/run:ro"
  #     - "/sys:/sys:ro"
  #     - "/var/lib/docker:/var/lib/docker:ro"
  #   restart: always

  # prometheus:
  #   image: prom/prometheus:v2.3.2
  #   container_name: prometheus
  #   ports: 
  #     - "9090:9090"
  #   volumes:
  #     - "./data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
  #   restart: always

  # grafana:
  #   image: grafana/grafana:5.2.3
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   user: ${ID}
  #   volumes:
  #     - "./data/grafana:/var/lib/grafana"
  #   restart: always